# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{application="blogApplication",area="nonheap",id="Code Cache",} 9471936.0
jvm_memory_used_bytes{application="blogApplication",area="heap",id="PS Eden Space",} 2.1730444E8
jvm_memory_used_bytes{application="blogApplication",area="heap",id="PS Survivor Space",} 0.0
jvm_memory_used_bytes{application="blogApplication",area="heap",id="PS Old Gen",} 2.2657672E7
jvm_memory_used_bytes{application="blogApplication",area="nonheap",id="Compressed Class Space",} 6222576.0
jvm_memory_used_bytes{application="blogApplication",area="nonheap",id="Metaspace",} 4.5658264E7
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action="end of minor GC",application="blogApplication",cause="Metadata GC Threshold",} 1.0
jvm_gc_pause_seconds_sum{action="end of minor GC",application="blogApplication",cause="Metadata GC Threshold",} 0.008
jvm_gc_pause_seconds_count{action="end of major GC",application="blogApplication",cause="Metadata GC Threshold",} 1.0
jvm_gc_pause_seconds_sum{action="end of major GC",application="blogApplication",cause="Metadata GC Threshold",} 0.054
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action="end of minor GC",application="blogApplication",cause="Metadata GC Threshold",} 0.008
jvm_gc_pause_seconds_max{action="end of major GC",application="blogApplication",cause="Metadata GC Threshold",} 0.054
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{application="blogApplication",id="mapped",} 0.0
jvm_buffer_memory_used_bytes{application="blogApplication",id="direct",} 16384.0
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total{application="blogApplication",} 6912616.0
# HELP logback_events_total Number of error level events that made it to the logs
# TYPE logback_events_total counter
logback_events_total{application="blogApplication",level="warn",} 0.0
logback_events_total{application="blogApplication",level="trace",} 0.0
logback_events_total{application="blogApplication",level="info",} 10.0
logback_events_total{application="blogApplication",level="debug",} 0.0
logback_events_total{application="blogApplication",level="error",} 0.0
# HELP jvm_gc_live_data_size_bytes Size of old generation memory pool after a full GC
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes{application="blogApplication",} 2.2657672E7
# HELP jdbc_connections_active  
# TYPE jdbc_connections_active gauge
jdbc_connections_active{application="blogApplication",name="dataSource",} 0.0
# HELP jvm_threads_states_threads The current number of threads having NEW state
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{application="blogApplication",state="new",} 0.0
jvm_threads_states_threads{application="blogApplication",state="runnable",} 10.0
jvm_threads_states_threads{application="blogApplication",state="blocked",} 0.0
jvm_threads_states_threads{application="blogApplication",state="terminated",} 0.0
jvm_threads_states_threads{application="blogApplication",state="waiting",} 13.0
jvm_threads_states_threads{application="blogApplication",state="timed-waiting",} 9.0
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the young generation memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total{application="blogApplication",} 8.0344336E7
# HELP process_cpu_usage The "recent cpu usage" for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage{application="blogApplication",} 0.0
# HELP hikaricp_connections_timeout_total Connection timeout total count
# TYPE hikaricp_connections_timeout_total counter
hikaricp_connections_timeout_total{application="blogApplication",pool="HikariPool-1",} 0.0
# HELP tomcat_sessions_created_sessions_total  
# TYPE tomcat_sessions_created_sessions_total counter
tomcat_sessions_created_sessions_total{application="blogApplication",} 0.0
# HELP tomcat_global_request_max_seconds  
# TYPE tomcat_global_request_max_seconds gauge
tomcat_global_request_max_seconds{application="blogApplication",name="http-nio-8001",} 0.0
# HELP tomcat_sessions_active_current_sessions  
# TYPE tomcat_sessions_active_current_sessions gauge
tomcat_sessions_active_current_sessions{application="blogApplication",} 0.0
# HELP jvm_gc_max_data_size_bytes Max size of old generation memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes{application="blogApplication",} 1.416626176E9
# HELP hikaricp_connections_active Active connections
# TYPE hikaricp_connections_active gauge
hikaricp_connections_active{application="blogApplication",pool="HikariPool-1",} 0.0
# HELP jdbc_connections_max  
# TYPE jdbc_connections_max gauge
jdbc_connections_max{application="blogApplication",name="dataSource",} 10.0
# HELP hikaricp_connections_min Min connections
# TYPE hikaricp_connections_min gauge
hikaricp_connections_min{application="blogApplication",pool="HikariPool-1",} 10.0
# HELP hikaricp_connections_pending Pending threads
# TYPE hikaricp_connections_pending gauge
hikaricp_connections_pending{application="blogApplication",pool="HikariPool-1",} 0.0
# HELP tomcat_threads_config_max_threads  
# TYPE tomcat_threads_config_max_threads gauge
tomcat_threads_config_max_threads{application="blogApplication",name="http-nio-8001",} 200.0
# HELP tomcat_global_received_bytes_total  
# TYPE tomcat_global_received_bytes_total counter
tomcat_global_received_bytes_total{application="blogApplication",name="http-nio-8001",} 0.0
# HELP tomcat_sessions_alive_max_seconds  
# TYPE tomcat_sessions_alive_max_seconds gauge
tomcat_sessions_alive_max_seconds{application="blogApplication",} 0.0
# HELP hikaricp_connections_creation_seconds_max Connection creation time
# TYPE hikaricp_connections_creation_seconds_max gauge
hikaricp_connections_creation_seconds_max{application="blogApplication",pool="HikariPool-1",} 0.0
# HELP hikaricp_connections_creation_seconds Connection creation time
# TYPE hikaricp_connections_creation_seconds summary
hikaricp_connections_creation_seconds_count{application="blogApplication",pool="HikariPool-1",} 0.0
hikaricp_connections_creation_seconds_sum{application="blogApplication",pool="HikariPool-1",} 0.0
# HELP hikaricp_connections_max Max connections
# TYPE hikaricp_connections_max gauge
hikaricp_connections_max{application="blogApplication",pool="HikariPool-1",} 10.0
# HELP hikaricp_connections_idle Idle connections
# TYPE hikaricp_connections_idle gauge
hikaricp_connections_idle{application="blogApplication",pool="HikariPool-1",} 10.0
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{application="blogApplication",area="nonheap",id="Code Cache",} 9502720.0
jvm_memory_committed_bytes{application="blogApplication",area="heap",id="PS Eden Space",} 2.31211008E8
jvm_memory_committed_bytes{application="blogApplication",area="heap",id="PS Survivor Space",} 1.3631488E7
jvm_memory_committed_bytes{application="blogApplication",area="heap",id="PS Old Gen",} 7.5497472E7
jvm_memory_committed_bytes{application="blogApplication",area="nonheap",id="Compressed Class Space",} 6815744.0
jvm_memory_committed_bytes{application="blogApplication",area="nonheap",id="Metaspace",} 4.8758784E7
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads{application="blogApplication",} 32.0
# HELP process_uptime_seconds The uptime of the Java virtual machine
# TYPE process_uptime_seconds gauge
process_uptime_seconds{application="blogApplication",} 66.002
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count{application="blogApplication",} 8.0
# HELP tomcat_sessions_active_max_sessions  
# TYPE tomcat_sessions_active_max_sessions gauge
tomcat_sessions_active_max_sessions{application="blogApplication",} 0.0
# HELP tomcat_global_request_seconds  
# TYPE tomcat_global_request_seconds summary
tomcat_global_request_seconds_count{application="blogApplication",name="http-nio-8001",} 0.0
tomcat_global_request_seconds_sum{application="blogApplication",name="http-nio-8001",} 0.0
# HELP hikaricp_connections Total connections
# TYPE hikaricp_connections gauge
hikaricp_connections{application="blogApplication",pool="HikariPool-1",} 10.0
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{application="blogApplication",area="nonheap",id="Code Cache",} 2.5165824E8
jvm_memory_max_bytes{application="blogApplication",area="heap",id="PS Eden Space",} 6.77904384E8
jvm_memory_max_bytes{application="blogApplication",area="heap",id="PS Survivor Space",} 1.3631488E7
jvm_memory_max_bytes{application="blogApplication",area="heap",id="PS Old Gen",} 1.416626176E9
jvm_memory_max_bytes{application="blogApplication",area="nonheap",id="Compressed Class Space",} 1.073741824E9
jvm_memory_max_bytes{application="blogApplication",area="nonheap",id="Metaspace",} -1.0
# HELP process_start_time_seconds Start time of the process since unix epoch.
# TYPE process_start_time_seconds gauge
process_start_time_seconds{application="blogApplication",} 1.553834538051E9
# HELP tomcat_sessions_rejected_sessions_total  
# TYPE tomcat_sessions_rejected_sessions_total counter
tomcat_sessions_rejected_sessions_total{application="blogApplication",} 0.0
# HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total{application="blogApplication",} 1.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads{application="blogApplication",} 44.0
# HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{application="blogApplication",id="mapped",} 0.0
jvm_buffer_total_capacity_bytes{application="blogApplication",id="direct",} 16384.0
# HELP system_cpu_usage The "recent cpu usage" for the whole system
# TYPE system_cpu_usage gauge
system_cpu_usage{application="blogApplication",} 1.0
# HELP hikaricp_connections_acquire_seconds Connection acquire time
# TYPE hikaricp_connections_acquire_seconds summary
hikaricp_connections_acquire_seconds_count{application="blogApplication",pool="HikariPool-1",} 2.0
hikaricp_connections_acquire_seconds_sum{application="blogApplication",pool="HikariPool-1",} 2.54859E-4
# HELP hikaricp_connections_acquire_seconds_max Connection acquire time
# TYPE hikaricp_connections_acquire_seconds_max gauge
hikaricp_connections_acquire_seconds_max{application="blogApplication",pool="HikariPool-1",} 2.40922E-4
# HELP hikaricp_connections_usage_seconds Connection usage time
# TYPE hikaricp_connections_usage_seconds summary
hikaricp_connections_usage_seconds_count{application="blogApplication",pool="HikariPool-1",} 2.0
hikaricp_connections_usage_seconds_sum{application="blogApplication",pool="HikariPool-1",} 0.022
# HELP hikaricp_connections_usage_seconds_max Connection usage time
# TYPE hikaricp_connections_usage_seconds_max gauge
hikaricp_connections_usage_seconds_max{application="blogApplication",pool="HikariPool-1",} 0.017
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes{application="blogApplication",} 9273.0
# HELP tomcat_threads_current_threads  
# TYPE tomcat_threads_current_threads gauge
tomcat_threads_current_threads{application="blogApplication",name="http-nio-8001",} 10.0
# HELP tomcat_threads_busy_threads  
# TYPE tomcat_threads_busy_threads gauge
tomcat_threads_busy_threads{application="blogApplication",name="http-nio-8001",} 1.0
# HELP jdbc_connections_min  
# TYPE jdbc_connections_min gauge
jdbc_connections_min{application="blogApplication",name="dataSource",} 10.0
# HELP tomcat_sessions_expired_sessions_total  
# TYPE tomcat_sessions_expired_sessions_total counter
tomcat_sessions_expired_sessions_total{application="blogApplication",} 0.0
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads{application="blogApplication",} 27.0
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{application="blogApplication",id="mapped",} 0.0
jvm_buffer_count_buffers{application="blogApplication",id="direct",} 2.0
# HELP tomcat_global_error_total  
# TYPE tomcat_global_error_total counter
tomcat_global_error_total{application="blogApplication",name="http-nio-8001",} 0.0
# HELP tomcat_global_sent_bytes_total  
# TYPE tomcat_global_sent_bytes_total counter
tomcat_global_sent_bytes_total{application="blogApplication",name="http-nio-8001",} 0.0
